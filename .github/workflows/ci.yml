# This file is maintained by velocitas CLI, do not modify manually. Change settings in .velocitas.json
# Copyright (c) 2022 Robert Bosch GmbH and Microsoft Corporation
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: CI workflow

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    # Run only on branches/commits and not tags
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  unit-tests:
    runs-on: ubuntu-22.04
    container: ghcr.io/eclipse-velocitas/devcontainer-base-images/python:latest
    name: Run unit tests and linters

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: de-vri-es/setup-git-credentials@v2
        with:
          credentials: https://user:${{ secrets.GITHUB_TOKEN }}@github.com/

      - name: Init velocitas project
        run: |
          velocitas init

      - name: Install required packages
        run: |
          pip install -r requirements.txt
          pip install -r app/requirements-links.txt
          pip install -r app/requirements.txt
          pip install -r app/tests/requirements.txt

      - name: Fix dubious ownership
        run: |
          git config --global --add safe.directory $( pwd )

      - name: Run Linters
        uses: ./.github/actions/pre-commit-action

      - name: Clone Release Documentation Action repository
        uses: actions/checkout@v3
        with:
          repository: eclipse-velocitas/release-documentation-action
          path: "./.github/release-documentation/actions"

      - name: unit test
        shell: bash
        run: |
          pytest --rootdir=./app/tests/unit --override-ini junit_family=xunit1 --junit-xml=./results/UnitTest/junit.xml --cov ./app/tests/unit --cov-report=xml:results/CodeCoverage/cobertura-coverage.xml --cov-branch ./app/tests/unit --cov-config=setup.cfg
          coverage2clover -i results/CodeCoverage/cobertura-coverage.xml -o results/CodeCoverage/clover.xml
          coveragepy-lcov --data_file_path ./.coverage --output_file_path results/CodeCoverage/lcov.info

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: ./results/UnitTest/junit.xml

      #########################################################
      # This step was disabled temporarily due to the required
      # write access rights of the PRs for external contributors.
      #########################################################
      #- name: Add code coverage comment to pr
      #  uses: romeovs/lcov-reporter-action@v0.3.1
      #  with:
      #    github-token: ${{ secrets.GITHUB_TOKEN }}
      #    lcov-file: results/CodeCoverage/lcov.info
      #    delete-old-comments: true
      #  if: github.event_name == 'pull_request'

      - name: Package unit test files
        uses: ./.github/release-documentation/actions/package
        with:
          name: "UnitTest"
          type: "UnitTest"
          schema: "JUnit"
          sourcePath: ./results/UnitTest/junit.xml
          packagePath: ./results/Documentation/renderer

      - name: Package code coverage files
        uses: ./.github/release-documentation/actions/package
        with:
          name: "CodeCoverage"
          type: "CodeCoverage"
          schema: "Cobertura"
          sourcePath: results/CodeCoverage
          packagePath: results/Documentation/renderer

      - name: Upload test results as artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: "test-results"
          path: |
            results/Documentation/renderer/*

      - name: Checking unit test code coverage
        id: test-coverage
        uses: johanvanhelden/gha-clover-test-coverage-check@v1
        with:
          percentage: "20"
          filename: "results/CodeCoverage/clover.xml"

  initialize-matrix:
    runs-on: ubuntu-latest
    name: Setting up build matrix
    outputs:
      deployment-matrix: ${{ steps.export-deployment-matrix.outputs.deployment-matrix }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get matrix data
        id: export-deployment-matrix
        run: |
          SITE_PACKAGES=$(python -m site --user-site)
          sed -i "s|SITE_PACKAGES|$SITE_PACKAGES|g" ./app/AppManifest.json
          MATRIX=$(cat ./app/AppManifest.json | tr '\n' ' ')

          echo "deployment-matrix=$MATRIX" >> $GITHUB_OUTPUT

  build-image-amd64:
    uses: ./.github/workflows/build-docker-image.yml
    needs: [initialize-matrix]
    with:
      platform: amd64
      deployment-matrix-str: ${{ needs.initialize-matrix.outputs.deployment-matrix }}

  run-integration-tests:
    name: Run Integration Tests (${{ matrix.component.Name }})
    runs-on: ubuntu-22.04
    needs: [initialize-matrix, build-image-amd64]
    strategy:
      matrix:
        component: ${{ fromJson(needs.initialize-matrix.outputs.deployment-matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: de-vri-es/setup-git-credentials@v2
        with:
          credentials: https://user:${{ secrets.GITHUB_TOKEN }}@github.com/

      - name: Init velocitas project
        run: |
          sudo curl -L https://github.com/eclipse-velocitas/cli/releases/latest/download/velocitas-linux-x64 -o /usr/bin/velocitas
          sudo chmod +x /usr/bin/velocitas
          velocitas init

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Install required packages
        run: |
          pip install -r ./app/requirements.txt
          pip install -r ./app/requirements-links.txt
          pip install -r ./app/tests/requirements.txt
          brew install k3d kubernetes-cli helm dapr/tap/dapr-cli

      - name: Configure K3D cluster
        run: velocitas exec runtime-k3d configure_controlplane

      - name: Install runtime containers in K3D cluster
        run: velocitas exec runtime-k3d deploy_runtime

      - id: github-repository-name-case-adjusted
        name: Prepare repository name in lower case for docker upload. This supports repository names in mixed case
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ github.repository }}

      - name: Download stored image from artifacts
        uses: actions/download-artifact@v3
        env:
          VAPP_IMAGE: ${{ matrix.component.Name }}-amd64
        with:
          name: ${{ env.VAPP_IMAGE }}
          path: ./.github/scripts/

      - name: Deploy images
        working-directory: ./.github/scripts
        run: ./deploy_image_from_artifact.sh

      - name: Run Python integration tests
        shell: bash
        env:
          VDB_PORT: 30555
          MQTT_PORT: 31883
        run: |
          pip install -r app/tests/requirements.txt
          pytest ./app/tests/integration --override-ini junit_family=xunit1 --junit-xml=./results/IntTest/junit.xml

      - name: Publish integration test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: ./results/IntTest/junit.xml

      - name: Clone release documentation action repository
        uses: actions/checkout@v3
        with:
          repository: eclipse-velocitas/release-documentation-action
          path: "./.github/actions"

      - name: Package integration test result files
        uses: ./.github/actions/package
        with:
          name: "IntegrationTest"
          type: "UnitTest"
          schema: "JUnit"
          sourcePath: ./results/IntTest/junit.xml
          packagePath: ./results/Documentation/renderer

      - name: Upload integration test results as artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: "test-results"
          path: |
            results/Documentation/renderer/*
