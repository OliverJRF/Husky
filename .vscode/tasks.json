{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "dapr-VehicleApp-run",
			"appId": "vehicleapp",
			"appPort": 50008,
			"componentsPath": "./.dapr/components",
			"config": "./.dapr/config.yaml",
			"appProtocol": "grpc",
			"grpcPort": 50001,
			"httpPort": 3500,
			"type": "dapr",
			"presentation": {
				"close": true,
				"reveal": "never"
			},
			"hide": true
		},
		{
			"label": "dapr-VehicleApp-stop",
			"type": "shell",
			"command": [
				"dapr stop --app-id vehicleapp"
			],
			"presentation": {
				"close": true,
				"reveal": "never"
			},
			"hide": true
		},
		{
			"label": "Local - Ensure Dapr",
			"detail": "Ensures that the Dapr binaries are installed and Dapr is configured for local execution.",
			"type": "shell",
			"command": "velocitas exec runtime-local ensure-dapr",
			"group": "none",
			"presentation": {
				"close": true
			},
			"problemMatcher": []
		},
		{
			"label": "Local - Mosquitto",
			"detail": "Runs Mosquitto MQTT Broker in a container (with docker run) with exposed port 1883.",
			"type": "shell",
			"command": "velocitas exec runtime-local run-mosquitto",
			"group": "none",
			"presentation": {
				"reveal": "always",
				"panel": "dedicated"
			},
			"isBackground": true,
			"problemMatcher": {
				"pattern": [
					{
						"regexp": ".",
						"file": 1,
						"location": 2,
						"message": 4
					}
				],
				"background": {
					"activeOnStart": true,
					"beginsPattern": "^\\d{10}: mosquitto version \\d{1}\\.\\d{1}\\.\\d{1} starting$",
					"endsPattern": "^\\d{10}: Opening ipv6 listen socket on port \\d{3,5}\\.$"
				}
			}
		},
		{
			"label": "Local - VehicleDataBroker",
			"detail": "Runs the VehicleDataBroker as background task.",
			"type": "shell",
			"command": "velocitas exec runtime-local run-vehicledatabroker",
			"group": "none",
			"presentation": {
				"reveal": "always",
				"panel": "dedicated"
			},
			"isBackground": true,
			"problemMatcher": {
				"pattern": [
					{
						"regexp": ".",
						"file": 1,
						"location": 2,
						"message": 3
					}
				],
				"background": {
					"activeOnStart": true,
					"beginsPattern": "^You're up and running! Dapr logs will appear here.",
					"endsPattern": "."
				}
			}
		},
		{
			"label": "Local - VehicleDataBroker CLI",
			"detail": "Starts the VehicleDataBroker CLI",
			"type": "shell",
			"command": "velocitas exec runtime-local run-vehicledatabroker-cli",
			"group": "none",
			"isBackground": false,
			"problemMatcher": []
		},
		{
			"label": "Local - Pre Commit Action",
			"detail": "Perform checking/formating of the code",
			"type": "shell",
			"command": "pre-commit run --show-diff-on-failure --color=always --all-files",
			"group": "none",
			"isBackground": false,
			"problemMatcher": []
		},
		{
			"label": "Local - VehicleServices",
			"detail": "Runs all configured VehicleServices as background task.",
			"type": "shell",
			"command": "velocitas exec runtime-local run-vehicleservices",
			"group": "none",
			"presentation": {
				"reveal": "always",
				"panel": "dedicated"
			},
			"isBackground": true,
			"problemMatcher": {
				"pattern": [
					{
						"regexp": ".",
						"file": 1,
						"location": 2,
						"message": 3
					}
				],
				"background": {
					"activeOnStart": true,
					"beginsPattern": "^You're up and running! Dapr logs will appear here.",
					"endsPattern": "."
				}
			}
		},
		{
			"label": "Local - FeederCan",
			"detail": "Runs FeederCan as background task.",
			"type": "shell",
			"command": "velocitas exec runtime-local run-feedercan",
			"group": "none",
			"presentation": {
				"reveal": "always",
				"panel": "dedicated"
			},
			"isBackground": true,
			"problemMatcher": {
				"pattern": [
					{
						"regexp": ".",
						"file": 1,
						"location": 2,
						"message": 3
					}
				],
				"background": {
					"activeOnStart": true,
					"beginsPattern": "^You're up and running! Dapr logs will appear here.",
					"endsPattern": "."
				}
			}
		},
		{
			"label": "Local - Start VehicleApp runtime",
			"detail": "Runs all components of the VehicleApp runtime.",
			"dependsOn": [
				"Local - Ensure Dapr",
				"Local - Mosquitto",
				"Local - VehicleDataBroker",
				"Local - VehicleServices",
				"Local - FeederCan"
			],
			"dependsOrder": "sequence",
			"problemMatcher": []
		},
		{
			"label": "Local - VehicleApp (Dapr run)",
			"detail": "Start VehicleApp with dapr run (p.e. for running integration tests locally).",
			"type": "shell",
			"command": [
				"dapr run",
				"--app-id vehicleapp",
				"--app-protocol grpc",
				"--app-port 50008",
				"--config ./.dapr/config.yaml",
				"--components-path ./.dapr/components",
				"python3 ./app/src/main.py"
			],
			"group": "none",
			"isBackground": true,
			"problemMatcher": {
				"pattern": [
					{
						"regexp": ".",
						"file": 1,
						"location": 2,
						"message": 3
					}
				],
				"background": {
					"activeOnStart": true,
					"beginsPattern": "^You're up and running! Both Dapr and your app logs will appear here.",
					"endsPattern": "."
				}
			}
		},
		{
			"label": "K3D - Configure control plane",
			"detail": "Creates a local container registry used by K3D as well as an K3D cluster with Dapr enabled.",
			"type": "shell",
			"command": "velocitas exec runtime-k3d configure_controlplane",
			"group": "none",
			"presentation": {
				"reveal": "always",
				"clear": true,
				"close": false
			},
			"problemMatcher": []
		},
		{
			"label": "K3D - Deploy runtime",
			"detail": "Deploys the runtime components (like Vehicle Data Broker, Seat Service, ...) within the K3D cluster.",
			"type": "shell",
			"command": "velocitas exec runtime-k3d deploy_runtime",
			"group": "none",
			"presentation": {
				"reveal": "always",
				"clear": true,
				"close": false
			},
			"dependsOn": [
				"K3D - Configure control plane"
			],
			"problemMatcher": []
		},
		{
			"label": "K3D - Build VehicleApp",
			"detail": "Builds the VehicleApp and pushes it to the local K3D registry.",
			"type": "shell",
			"command": "velocitas exec deployment-k3d build_vehicleapp",
			"group": "none",
			"presentation": {
				"reveal": "always",
				"panel": "dedicated",
				"clear": true,
				"close": false
			},
			"problemMatcher": []
		},
		{
			"label": "K3D - Deploy VehicleApp",
			"detail": "Builds and deploys the VehicleApp via Helm to the K3D cluster.",
			"type": "shell",
			"command": "velocitas exec deployment-k3d deploy_vehicleapp",
			"group": "none",
			"presentation": {
				"reveal": "always",
				"panel": "dedicated",
				"clear": true,
				"close": false
			},
			"dependsOn": [
				"K3D - Deploy runtime",
				"K3D - Build VehicleApp"
			],
			"problemMatcher": []
		},
		{
			"label": "K3D - Deploy VehicleApp (without rebuild)",
			"detail": "Deploys the VehicleApp via Helm to the K3D cluster (without rebuilding it)",
			"type": "shell",
			"command": "velocitas exec deployment-k3d deploy_vehicleapp",
			"group": "none",
			"presentation": {
				"reveal": "always",
				"panel": "dedicated",
				"clear": true,
				"close": false
			},
			"dependsOn": [
				"K3D - Deploy runtime"
			],
			"problemMatcher": []
		},
		{
			"label": "K3D - Uninstall runtime",
			"detail": "Uninstalls the runtime components from the K3D cluster (without deleting the cluster).",
			"type": "shell",
			"command": "velocitas exec runtime-k3d uninstall_runtime",
			"group": "none",
			"presentation": {
				"reveal": "always",
				"panel": "dedicated",
				"clear": true,
				"close": false
			},
			"dependsOn": [
				"K3D - Configure control plane"
			],
			"problemMatcher": []
		},
		{
			"label": "K3D - Reset control plane",
			"detail": "Deletes the K3D cluster with all deployed pods/services.",
			"type": "shell",
			"command": "velocitas exec runtime-k3d reset_controlplane",
			"group": "none",
			"presentation": {
				"reveal": "always",
				"panel": "dedicated",
				"clear": true,
				"close": false
			},
			"problemMatcher": []
		},
		{
			"label": "Import example app from SDK",
			"detail": "Import example app from SDK",
			"type": "shell",
			"command": "./.vscode/scripts/import-example-app.sh ${input:exampleApp}"
		},
		{
			"label": "(Re-)generate vehicle model",
			"detail": "(Re-)generates the vehicle model from source files specified in the AppManifest.",
			"type": "shell",
			"command": "velocitas exec vehicle-model-lifecycle generate-model",
			"group": "none",
			"presentation": {
				"reveal": "always",
				"panel": "dedicated",
				"clear": true,
				"close": false
			},
			"problemMatcher": []
		}
	],
	"inputs": [
		{
			"description": "Options for example apps from SDK package.",
			"id": "exampleApp",
			"type": "pickString",
			"options": [
				"seat-adjuster"
			],
		}
	]
}
